on: [push, pull_request]
name: Test
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.14.x, 1.15.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      run: go build -v github.com/patil-ashutosh/RegexUtility/regex
  upload:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.12

      - name: Check out code
        uses: actions/checkout@v1

      - name: Test code
        run: go test -v -coverprofile=coverage.txt -coverpkg=github.com/patil-ashutosh/RegexUtility/regex

      
      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.txt
      
      - name: Upload report to Codacy
        shell: bash
        run: |
          export GOPATH=$(go env GOPATH)
          export GOBIN=$GOPATH/bin
          export PATH=$PATH:$GOBIN
          go get github.com/schrej/godacov
          godacov -t $CODACY_PROJECT_TOKEN -r ./coverage.txt -c $GITHUB_SHA
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.codacy_token }}

      - name: Upload report to Code Climate
        shell: bash
        run: |
          source script/prepare.sh
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build
          go test -race -cover -coverprofile=c.out ./...
          ./cc-test-reporter format-coverage -t gocov
          ./cc-test-reporter upload-coverage
          source script/cleanup.sh
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.cc_report_id }}

      - name: Upload report to DeepSource
        shell: bash
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key go --value-file ./coverage.txt
        env:
          DEEPSOURCE_DSN: ${{ secrets.deepsource_dsn }}
